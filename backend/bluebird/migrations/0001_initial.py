# Generated by Django 3.0.3 on 2020-03-13 07:05

import bluebird.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CityModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Город')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_field', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContractNumberClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_generated', models.BooleanField(default=False)),
                ('contract_exist_number', models.CharField(blank=True, default='', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contragent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('klass', models.IntegerField(choices=[(0, 'Пусто'), (1, 'Юридическое лицо без договора'), (2, 'Юридическое лицо с договором'), (3, 'ИЖС без договора'), (4, 'ИЖС с договором'), (5, 'Физическое лицо')], default=0, verbose_name='Класс контрагента')),
                ('excell_name', models.CharField(max_length=255, verbose_name='Наименование контрагента (из Excell)')),
                ('dadata_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование контрагента (из Dadata)')),
                ('debt', models.FloatField(default=0.0, verbose_name='Сумма задолжности')),
                ('inn', models.BigIntegerField(blank=True, null=True, verbose_name='ИНН контрагента')),
                ('ogrn', models.BigIntegerField(blank=True, null=True, verbose_name='ОГРН контрагента')),
                ('kpp', models.BigIntegerField(blank=True, null=True, verbose_name='КПП контрагента')),
                ('rs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Р/с')),
                ('ks', models.CharField(blank=True, max_length=255, null=True, verbose_name='К/с')),
                ('bank', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование банка')),
                ('bik', models.CharField(blank=True, max_length=255, null=True, verbose_name='БИК')),
                ('opf', models.CharField(blank=True, max_length=255, null=True, verbose_name='ОПФ')),
                ('director_status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Директор (физ. лицо либо юр. лицо)')),
                ('director_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя либо иное наименование директора')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='Дата создания контрагента (юл)')),
                ('is_func', models.BooleanField(default=True, verbose_name='Признак активности контрагента')),
                ('okved', models.CharField(blank=True, max_length=255, null=True, verbose_name='ОКВЭД')),
                ('physical_address', models.CharField(max_length=255, verbose_name='Физический адресс')),
                ('legal_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Юридический адресс')),
                ('stat_value', models.FloatField(blank=True, null=True, verbose_name='Показатель')),
                ('contract_accept_date', models.DateField(blank=True, default=datetime.date(2018, 7, 1), null=True, verbose_name='Дата начала оказания услуг')),
                ('current_date', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Конечная дата оказания услуг')),
                ('current_contract_date', models.DateField(blank=True, null=True, verbose_name='Дата заключения договора')),
                ('platform', models.IntegerField(blank=True, null=True, verbose_name='№ площадки')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentTypeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тип документа')),
                ('is_pack', models.BooleanField(default=False, verbose_name='Пакет документов')),
            ],
        ),
        migrations.CreateModel(
            name='Normative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('since_date', models.DateField(blank=True, null=True, verbose_name='Дата начала действия норматива')),
                ('up_to_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания действия норматива')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='Значение норматива (год.)')),
            ],
        ),
        migrations.CreateModel(
            name='SyncUniqueNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_path', models.CharField(max_length=255, verbose_name='Путь до шаблона')),
                ('contragent_type', models.IntegerField(choices=[(0, 'Пусто'), (1, 'Юридическое лицо без договора'), (2, 'Юридическое лицо с договором'), (3, 'ИЖС без договора'), (4, 'ИЖС с договором'), (5, 'Физическое лицо')], default=0, verbose_name='Тип контрагента')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bluebird.CityModel')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bluebird.DocumentTypeModel', verbose_name='Тип документа')),
            ],
        ),
        migrations.CreateModel(
            name='SingleFilesTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contagent_type', models.IntegerField(choices=[(0, 'Пусто'), (1, 'Юридическое лицо без договора'), (2, 'Юридическое лицо с договором'), (3, 'ИЖС без договора'), (4, 'ИЖС с договором'), (5, 'Физическое лицо')], default=0)),
                ('documents', models.ManyToManyField(related_name='document_type', to='bluebird.DocumentTypeModel')),
            ],
        ),
        migrations.CreateModel(
            name='SingleFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название файла')),
                ('file_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Путь')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='Дата создания файла')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('file_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bluebird.DocumentTypeModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='ФИО отвественного лица')),
                ('document', models.IntegerField(choices=[(0, 'Доверенность'), (1, 'Пасспорт')], default=0, verbose_name='Документ основания')),
                ('position', models.IntegerField(choices=[(0, 'Клиент-менеджер'), (1, 'Старший менеджер по работе с ЮЛ'), (2, 'Менеджер')], default=0, verbose_name='Должность')),
                ('doc_number', models.CharField(max_length=255, verbose_name='Номер документа')),
                ('doc_date', models.DateField(verbose_name='Дата начала действия документа')),
                ('address', models.CharField(max_length=255, verbose_name='Адресс')),
                ('tel_number', models.CharField(default='', max_length=255, verbose_name='Телефон')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bluebird.CityModel')),
            ],
        ),
        migrations.CreateModel(
            name='PackFilesTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contagent_type', models.IntegerField(choices=[(0, 'Пусто'), (1, 'Юридическое лицо без договора'), (2, 'Юридическое лицо с договором'), (3, 'ИЖС без договора'), (4, 'ИЖС с договором'), (5, 'Физическое лицо')], default=0)),
                ('documents', models.ManyToManyField(related_name='document_type_pack', to='bluebird.DocumentTypeModel')),
            ],
        ),
        migrations.CreateModel(
            name='PackFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название файла')),
                ('file_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Путь')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='Дата создания файла')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('file_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bluebird.DocumentTypeModel')),
                ('unique_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bluebird.SyncUniqueNumber')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название файла')),
                ('file_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Путь')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='Дата создания файла')),
                ('object_id', models.PositiveIntegerField()),
                ('file_obj', models.FileField(max_length=500, upload_to=bluebird.models.other_files_directory_path, verbose_name='Произвольные файлы')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('file_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bluebird.DocumentTypeModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NormativeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Вид объекта')),
                ('norm_type', models.IntegerField(blank=True, choices=[(0, '1 м2 общей площади'), (1, '1 место'), (2, '1 человек')], default=0, null=True, verbose_name='Показатель расчета')),
                ('normative', models.ManyToManyField(related_name='normatives', to='bluebird.Normative', verbose_name='Нормативы')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentsPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uuid', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=255, null=True, verbose_name='Идентификатор пакета')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный пакет')),
                ('creation_date', models.DateField(auto_now_add=True, verbose_name='Дата создания пакета')),
                ('contragent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contragents', related_query_name='contragent', to='bluebird.Contragent')),
            ],
        ),
    ]
